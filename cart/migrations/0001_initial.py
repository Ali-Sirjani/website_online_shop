# Generated by Django 4.2.1 on 2023-06-19 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0005_productcomment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=200, null=True, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='IR', verbose_name='phone')),
                ('order_note', models.TextField(blank=True, null=True, verbose_name='order note')),
                ('completed', models.BooleanField(blank=True, default=False, null=True, verbose_name='completed')),
                ('transaction', models.CharField(max_length=200, null=True, verbose_name='transaction')),
                ('datetime_ordered', models.DateTimeField(auto_now_add=True, verbose_name='datetime ordered')),
                ('datetime_payed', models.DateTimeField(null=True, verbose_name='datetime payed')),
                ('get_cart_total_no_discount_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total no discount')),
                ('get_cart_total_discount_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total discount')),
                ('get_cart_total_profit_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total profit')),
                ('get_cart_total_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total')),
                ('get_cart_items_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=200, null=True, verbose_name='state')),
                ('city', models.CharField(max_length=200, null=True, verbose_name='city')),
                ('address', models.TextField(null=True, verbose_name='address')),
                ('plate', models.PositiveIntegerField(null=True, verbose_name='plate')),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='datetime added')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart.order', verbose_name='order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='quantity')),
                ('track_order', models.PositiveIntegerField(blank=True, choices=[(20, 'Payed'), (40, 'Processing'), (80, 'Out for delivery'), (100, 'Delivered')], default=0)),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='datetime added')),
                ('get_total_no_discount_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total no discount')),
                ('get_total_discount_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total discount')),
                ('get_total_profit_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total profit')),
                ('get_total_pass', models.PositiveIntegerField(null=True, verbose_name='get cart total')),
                ('item_title', models.CharField(max_length=300, null=True, verbose_name='title')),
                ('item_cover', models.ImageField(null=True, upload_to='product_covers/', verbose_name='cover')),
                ('item_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='price')),
                ('item_digital', models.BooleanField(blank=True, default=False, null=True, verbose_name='digital')),
                ('item_discount', models.BooleanField(default=False, verbose_name='discount')),
                ('item_discount_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='discount price')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='cart.order', verbose_name='order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product', verbose_name='product')),
            ],
            options={
                'ordering': ('datetime_added',),
            },
        ),
    ]
